// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/andriystech/lgc/models"
	mock "github.com/stretchr/testify/mock"
)

// MessagesRepository is an autogenerated mock type for the MessagesRepository type
type MessagesRepository struct {
	mock.Mock
}

// FindUserMessages provides a mock function with given fields: _a0, _a1
func (_m *MessagesRepository) FindUserMessages(_a0 context.Context, _a1 string) ([]*models.Message, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*models.Message
	if rf, ok := ret.Get(0).(func(context.Context, string) []*models.Message); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveMessage provides a mock function with given fields: _a0, _a1
func (_m *MessagesRepository) SaveMessage(_a0 context.Context, _a1 *models.Message) (string, error) {
	ret := _m.Called(_a0, _a1)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *models.Message) string); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *models.Message) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
